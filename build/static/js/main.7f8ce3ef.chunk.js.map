{"version":3,"sources":["components/EditButtons.js","components/CardEditor.js","components/Card.js","components/ListEditor.js","components/List.js","components/AddList.js","components/Board.js","components/App.js","store.js","seed.js","serviceWorker.js","index.js"],"names":["EditButtons","handleSave","saveLabel","handleDelete","handleCancel","className","tabIndex","style","backgroundColor","onClick","marginLeft","name","CardEditor","state","text","props","handleChangeText","event","setState","target","value","onEnter","e","keyCode","preventDefault","onSave","this","onCancel","onDelete","adding","autoFocus","placeholder","onChange","onKeyDown","Component","Card","hover","editing","startHover","endHover","startEditing","card","endEditing","editCard","a","dispatch","type","payload","cardId","_id","cardText","deleteCard","listId","window","confirm","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","connect","ownProps","cardsById","ListEditor","React","createRef","saveList","handleClick","current","contains","onClickOutside","document","addEventListener","removeEventListener","title","handleChangeTitle","deleteList","width","List","editingTitle","list","addingCard","toggleAddingCard","addCard","shortid","generate","toggleEditingTitle","editListTitle","listTitle","cards","droppableId","_snapshot","map","listsById","AddList","createList","toggleAddingList","Board","addingList","handleDragEnd","source","destination","sourceListId","destListId","oldCardIndex","newCardIndex","oldListIndex","newListIndex","board","onDragEnd","direction","lists","App","reducers","combineReducers","action","newLists","Array","from","splice","removedList","filterDeleted","tmpListId","filter","restOfLists","newCards","removedCard","sourceCards","destinationCards","deletedCardId","restOfCards","cardIds","Object","keys","includes","reduce","newState","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","console","log","length","firstListId","secondListId","seed","Boolean","location","hostname","match","rootElement","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qWA8BeA,EA1BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,aAAxC,OAClB,sBAAKC,UAAU,eAAf,UACE,qBACEC,SAAS,IACTD,UAAU,cACVE,MAAO,CAAEC,gBAAiB,WAC1BC,QAASR,EAJX,SAMGC,IAEFC,GACC,qBACEG,SAAS,IACTD,UAAU,cACVE,MAAO,CAAEC,gBAAiB,UAAWE,WAAY,GACjDD,QAASN,EAJX,oBASF,qBAAKG,SAAS,IAAID,UAAU,qBAAqBI,QAASL,EAA1D,SACE,0BAAUO,KAAK,gBCwBNC,E,4MA1CbC,MAAQ,CACNC,KAAM,EAAKC,MAAMD,MAAQ,I,EAG3BE,iBAAmB,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAEJ,KAAMG,EAAME,OAAOC,S,EAE/DC,QAAU,SAAAC,GAAM,IACNR,EAAS,EAAKD,MAAdC,KAEU,KAAdQ,EAAEC,UACJD,EAAEE,iBACF,EAAKT,MAAMU,OAAOX,K,4CAItB,WAAU,IACAA,EAASY,KAAKb,MAAdC,KADD,EAEwCY,KAAKX,MAA5CU,EAFD,EAECA,OAAQE,EAFT,EAESA,SAAUC,EAFnB,EAEmBA,SAAUC,EAF7B,EAE6BA,OAEpC,OACE,sBAAKxB,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CACEyB,WAAS,EACTzB,UAAU,qBACV0B,YAAY,kCACZX,MAAON,EACPkB,SAAUN,KAAKV,iBACfiB,UAAWP,KAAKL,YAGpB,cAAC,EAAD,CACEpB,WAAY,kBAAMwB,EAAOX,IACzBZ,UAAW2B,EAAS,WAAa,OACjC1B,aAAcyB,EACdxB,aAAcuB,W,GApCCO,aCEnBC,E,4MACJtB,MAAQ,CACNuB,OAAO,EACPC,SAAS,G,EAGXC,WAAa,kBAAM,EAAKpB,SAAS,CAAEkB,OAAO,K,EAC1CG,SAAW,kBAAM,EAAKrB,SAAS,CAAEkB,OAAO,K,EAExCI,aAAe,kBACb,EAAKtB,SAAS,CACZkB,OAAO,EACPC,SAAS,EACTvB,KAAM,EAAKC,MAAM0B,KAAK3B,Q,EAG1B4B,WAAa,kBAAM,EAAKxB,SAAS,CAAEkB,OAAO,EAAOC,SAAS,K,EAE1DM,S,uCAAW,WAAM7B,GAAN,mBAAA8B,EAAA,wDACkB,EAAK7B,MAAxB0B,EADC,EACDA,KAAMI,EADL,EACKA,SAEd,EAAKH,aAELG,EAAS,CACPC,KAAM,mBACNC,QAAS,CAAEC,OAAQP,EAAKQ,IAAKC,SAAUpC,KAPhC,2C,wDAWXqC,W,sBAAa,kCAAAP,EAAA,wDACwB,EAAK7B,MAAhCqC,EADG,EACHA,OAAQX,EADL,EACKA,KAAMI,EADX,EACWA,SAElBQ,OAAOC,QAAQ,sCACjBT,EAAS,CACPC,KAAM,cACNC,QAAS,CAAEC,OAAQP,EAAKQ,IAAKG,YANtB,2C,4CAWb,WAAU,IAAD,SACiB1B,KAAKX,MAArB0B,EADD,EACCA,KAAMc,EADP,EACOA,MADP,EAEoB7B,KAAKb,MAAxBuB,EAFD,EAECA,MAER,OAJO,EAEQC,QA6BX,cAAC,EAAD,CACEvB,KAAM2B,EAAK3B,KACXW,OAAQC,KAAKiB,SACbf,SAAUF,KAAKyB,WACfxB,SAAUD,KAAKgB,aA7BjB,cAAC,IAAD,CAAWc,YAAaf,EAAKQ,IAAKM,MAAOA,EAAzC,SACG,SAACE,EAAUC,GAAX,OACC,0DACEC,IAAKF,EAASG,UACVH,EAASI,gBACTJ,EAASK,iBAHf,IAIEzD,UAAU,OACV0D,aAAc,EAAKzB,WACnB0B,aAAc,EAAKzB,SANrB,UAQGH,GACC,qBAAK/B,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAYI,QAAS,EAAK+B,aAAzC,SACE,0BAAU7B,KAAK,eAKpB8B,EAAK3B,gB,GAhEDoB,aAsFJ+B,eAJS,SAACpD,EAAOqD,GAAR,MAAsB,CAC5CzB,KAAM5B,EAAMsD,UAAUD,EAASlB,WAGlBiB,CAAyB9B,GCzCzBiC,G,mNA/CbT,IAAMU,IAAMC,Y,EAEZjD,QAAU,SAAAC,GACU,KAAdA,EAAEC,UACJD,EAAEE,iBACF,EAAKT,MAAMwD,a,EAIfC,YAAc,SAAAlD,GACC,EAAKqC,IAAIc,QAEbC,SAASpD,EAAEH,SAIpB,EAAKJ,MAAM4D,kB,uDAGb,WACEC,SAASC,iBAAiB,QAASnD,KAAK8C,aAAa,K,kCAGvD,WACEI,SAASE,oBAAoB,QAASpD,KAAK8C,aAAa,K,oBAG1D,WAAU,IAAD,EAC0C9C,KAAKX,MAA9CgE,EADD,EACCA,MAAOC,EADR,EACQA,kBAAmBC,EAD3B,EAC2BA,WAElC,OACE,sBAAK5E,UAAU,kBAAkBsD,IAAKjC,KAAKiC,IAA3C,UACE,cAAC,IAAD,CACE7B,WAAS,EACTzB,UAAU,sBACV0B,YAAY,sBACZX,MAAO2D,EACP/C,SAAUgD,EACV/C,UAAWP,KAAKL,QAChBd,MAAO,CAAE2E,MAAOD,EAAa,IAAM,OAEpCA,GAAc,0BAAUtE,KAAK,QAAQF,QAASwE,W,GA1C9B/C,c,iBCOnBiD,E,4MACJtE,MAAQ,CACNuE,cAAc,EACdL,MAAO,EAAKhE,MAAMsE,KAAKN,MACvBO,YAAY,G,EAGdC,iBAAmB,kBACjB,EAAKrE,SAAS,CAAEoE,YAAa,EAAKzE,MAAMyE,c,EAE1CE,Q,uCAAU,WAAMtC,GAAN,qBAAAN,EAAA,wDACqB,EAAK7B,MAA1BqC,EADA,EACAA,OAAQP,EADR,EACQA,SAEhB,EAAK0C,mBAECvC,EAASyC,IAAQC,WAEvB7C,EAAS,CACPC,KAAM,WACNC,QAAS,CAAEG,WAAUF,SAAQI,YATvB,2C,wDAaVuC,mBAAqB,kBACnB,EAAKzE,SAAS,CAAEkE,cAAe,EAAKvE,MAAMuE,gB,EAE5CJ,kBAAoB,SAAA1D,GAAC,OAAI,EAAKJ,SAAS,CAAE6D,MAAOzD,EAAEH,OAAOC,S,EAEzDwE,c,sBAAgB,kCAAAhD,EAAA,wDACe,EAAK7B,MAA1BqC,EADM,EACNA,OAAQP,EADF,EACEA,SACRkC,EAAU,EAAKlE,MAAfkE,MAER,EAAKY,qBAEL9C,EAAS,CACPC,KAAM,oBACNC,QAAS,CAAEK,SAAQyC,UAAWd,KARlB,2C,EAYhBE,W,sBAAa,kCAAArC,EAAA,wDACwB,EAAK7B,MAAhCqC,EADG,EACHA,OAAQiC,EADL,EACKA,KAAMxC,EADX,EACWA,SAElBQ,OAAOC,QAAQ,sCACjBT,EAAS,CACPC,KAAM,cACNC,QAAS,CAACK,SAAQ0C,MAAOT,EAAKS,SANvB,2C,4CAWb,WAAU,IAAD,SACiBpE,KAAKX,MAArBsE,EADD,EACCA,KAAM9B,EADP,EACOA,MADP,EAEqC7B,KAAKb,MAAzCuE,EAFD,EAECA,aAAcE,EAFf,EAEeA,WAAYP,EAF3B,EAE2BA,MAElC,OACE,cAAC,IAAD,CAAWvB,YAAa6B,EAAKpC,IAAKM,MAAOA,EAAzC,SACG,SAACE,EAAUC,GAAX,OACC,0DACEC,IAAKF,EAASG,UACVH,EAASI,gBACTJ,EAASK,iBAHf,IAIEzD,UAAU,OAJZ,UAMG+E,EACC,cAAC,EAAD,CACEC,KAAMA,EACNN,MAAOA,EACPC,kBAAmB,EAAKA,kBACxBT,SAAU,EAAKqB,cACfjB,eAAgB,EAAKiB,cACrBX,WAAY,EAAKA,aAGnB,qBAAK5E,UAAU,aAAaI,QAAS,EAAKkF,mBAA1C,SACGN,EAAKN,QAIV,cAAC,IAAD,CAAWgB,YAAaV,EAAKpC,IAA7B,SACG,SAACQ,EAAUuC,GAAX,OACC,sBAAKrC,IAAKF,EAASG,SAAUvD,UAAU,cAAvC,UACGgF,EAAKS,OACJT,EAAKS,MAAMG,KAAI,SAACjD,EAAQO,GAAT,OACb,cAAC,EAAD,CAEEP,OAAQA,EACRO,MAAOA,EACPH,OAAQiC,EAAKpC,KAHRD,MAOVS,EAAS1B,YAETuD,EACC,cAAC,EAAD,CACE7D,OAAQ,EAAK+D,QACb7D,SAAU,EAAK4D,iBACf1D,QAAM,IAGR,sBAAKxB,UAAU,kBAAkBI,QAAS,EAAK8E,iBAA/C,UACE,0BAAU5E,KAAK,QADjB,kC,GArGDuB,aAuHJ+B,eAJS,SAACpD,EAAOqD,GAAR,MAAsB,CAC5CmB,KAAMxE,EAAMqF,UAAUhC,EAASd,WAGlBa,CAAyBkB,GC3HlCgB,G,mNACJtF,MAAQ,CACNkE,MAAO,I,EAGTC,kBAAoB,SAAA1D,GAAC,OAAI,EAAKJ,SAAS,CAAE6D,MAAOzD,EAAEH,OAAOC,S,EAEzDgF,W,sBAAa,8BAAAxD,EAAA,sDACHmC,EAAU,EAAKlE,MAAfkE,MACAlC,EAAa,EAAK9B,MAAlB8B,SAER,EAAK9B,MAAMsF,mBAEXxD,EAAS,CACPC,KAAM,WACNC,QAAS,CAAEK,OAAQqC,IAAQC,WAAYG,UAAWd,KARzC,2C,4CAYb,WAAU,IACAsB,EAAqB3E,KAAKX,MAA1BsF,iBACAtB,EAAUrD,KAAKb,MAAfkE,MAER,OACE,sBAAK1E,UAAU,kBAAf,UACE,cAAC,EAAD,CACE0E,MAAOA,EACPC,kBAAmBtD,KAAKsD,kBACxBL,eAAgB0B,EAChB9B,SAAU7C,KAAK0E,aAGjB,cAAC,EAAD,CACEnG,WAAYyB,KAAK0E,WACjBlG,UAAW,WACXE,aAAciG,W,GAnCFnE,cA0CP+B,gBAAUkC,GCzCnBG,E,4MACJzF,MAAQ,CACN0F,YAAY,G,EAGdF,iBAAmB,kBACjB,EAAKnF,SAAS,CAAEqF,YAAa,EAAK1F,MAAM0F,c,EAE1CC,cAAgB,YAAoC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,YAAa5D,EAAW,EAAXA,KAEtC,GAAK4D,EAAL,CAFiD,IAIzC7D,EAAa,EAAK9B,MAAlB8B,SAGK,WAATC,EAgBF2D,EAAOlD,QAAUmD,EAAYnD,OAC7BkD,EAAOV,cAAgBW,EAAYX,aAEnClD,EAAS,CACPC,KAAM,YACNC,QAAS,CACP4D,aAAcF,EAAOV,YACrBa,WAAYF,EAAYX,YACxBc,aAAcJ,EAAOlD,MACrBuD,aAAcJ,EAAYnD,SAvB1BkD,EAAOlD,QAAUmD,EAAYnD,OAC/BV,EAAS,CACPC,KAAM,YACNC,QAAS,CACPgE,aAAcN,EAAOlD,MACrByD,aAAcN,EAAYnD,W,4CAwBpC,WAAU,IAAD,OACC0D,EAAUvF,KAAKX,MAAfkG,MACAV,EAAe7E,KAAKb,MAApB0F,WAER,OACE,cAAC,IAAD,CAAiBW,UAAWxF,KAAK8E,cAAjC,SACE,cAAC,IAAD,CAAWT,YAAY,QAAQoB,UAAU,aAAarE,KAAK,SAA3D,SACG,SAACW,EAAUuC,GAAX,OACC,sBAAK3F,UAAU,QAAQsD,IAAKF,EAASG,SAArC,UACGqD,EAAMG,MAAMnB,KAAI,SAAC7C,EAAQG,GACxB,OAAO,cAAC,EAAD,CAAMH,OAAQA,EAAqBG,MAAOA,GAAfH,MAGnCK,EAAS1B,YAEV,qBAAK1B,UAAU,WAAf,SACGkG,EACC,cAAC,EAAD,CAASF,iBAAkB,EAAKA,mBAEhC,sBACE5F,QAAS,EAAK4F,iBACdhG,UAAU,kBAFZ,UAIE,0BAAUM,KAAK,QAJjB,+B,GAjEEuB,aAmFL+B,eAFS,SAAApD,GAAK,MAAK,CAAEoG,MAAOpG,EAAMoG,SAElChD,CAAyBqC,GC3EzBe,E,4JAXb,WACE,OACE,sBAAKhH,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,gCAEA,cAAC,EAAD,W,GANU6B,a,wDCDlB,IA8HMoF,EAAWC,YAAgB,CAC/BN,MA/HY,WAAoC,IAAnCpG,EAAkC,uDAA1B,CAAEuG,MAAO,IAAMI,EAAW,uCAC/C,OAAQA,EAAO1E,MACb,IAAK,WAAa,IACRM,EAAWoE,EAAOzE,QAAlBK,OACR,MAAO,CAAEgE,MAAM,GAAD,mBAAMvG,EAAMuG,OAAZ,CAAmBhE,KAEnC,IAAK,YAAc,IAAD,EACuBoE,EAAOzE,QAAtCgE,EADQ,EACRA,aAAcC,EADN,EACMA,aAChBS,EAAWC,MAAMC,KAAK9G,EAAMuG,OAFlB,EAGMK,EAASG,OAAOb,EAAc,GAHpC,mBAGTc,EAHS,KAKhB,OADAJ,EAASG,OAAOZ,EAAc,EAAGa,GAC1B,CAAET,MAAOK,GAElB,IAAK,cAAgB,IACXrE,EAAWoE,EAAOzE,QAAlBK,OACF0E,EAAgB,SAAAC,GAAS,OAAIA,IAAc3E,GAC3CqE,EAAW5G,EAAMuG,MAAMY,OAAOF,GACpC,MAAO,CAAEV,MAAOK,GAElB,QACE,OAAO5G,IA4GXqF,UAxGgB,WAAyB,IAAxBrF,EAAuB,uDAAf,GAAI2G,EAAW,uCACxC,OAAQA,EAAO1E,MACb,IAAK,WAAa,IAAD,EACe0E,EAAOzE,QAA7BK,EADO,EACPA,OAAQyC,EADD,EACCA,UAChB,OAAO,2BACFhF,GADL,IAEE,CAACuC,GAAS,CAAEH,IAAKG,EAAQ2B,MAAOc,EAAWC,MAAO,MAGtD,IAAK,oBAAsB,IAAD,EACM0B,EAAOzE,QAA7BK,EADgB,EAChBA,OAAQyC,EADQ,EACRA,UAChB,OAAO,2BACFhF,GADL,IAEE,CAACuC,GAAD,2BAAevC,EAAMuC,IAArB,IAA8B2B,MAAOc,MAGzC,IAAK,cAAgB,IACXzC,EAAWoE,EAAOzE,QAAlBK,OAC0B6E,GAAgBpH,EAAzCuC,GAFS,YAEgCvC,EAFhC,CAETuC,GAFS,WAGlB,OAAO6E,EAET,IAAK,WAAa,IAAD,EACYT,EAAOzE,QAA1BK,EADO,EACPA,OAAQJ,EADD,EACCA,OAChB,OAAO,2BACFnC,GADL,IAEE,CAACuC,GAAD,2BAAevC,EAAMuC,IAArB,IAA8B0C,MAAM,GAAD,mBAAMjF,EAAMuC,GAAQ0C,OAApB,CAA2B9C,QAGlE,IAAK,YAAc,IAAD,EAMZwE,EAAOzE,QAJT8D,EAFc,EAEdA,aACAC,EAHc,EAGdA,aACAH,EAJc,EAIdA,aACAC,EALc,EAKdA,WAGF,GAAID,IAAiBC,EAAY,CAC/B,IAAMsB,EAAWR,MAAMC,KAAK9G,EAAM8F,GAAcb,OADjB,EAEToC,EAASN,OAAOf,EAAc,GAFrB,mBAExBsB,EAFwB,KAI/B,OADAD,EAASN,OAAOd,EAAc,EAAGqB,GAC1B,2BACFtH,GADL,IAEE,CAAC8F,GAAD,2BAAqB9F,EAAM8F,IAA3B,IAA0Cb,MAAOoC,MAIrD,IAAME,EAAcV,MAAMC,KAAK9G,EAAM8F,GAAcb,OAlBnC,EAmBMsC,EAAYR,OAAOf,EAAc,GAnBvC,mBAmBTsB,EAnBS,KAoBVE,EAAmBX,MAAMC,KAAK9G,EAAM+F,GAAYd,OAEtD,OADAuC,EAAiBT,OAAOd,EAAc,EAAGqB,GAClC,2BACFtH,GADL,IAEE,CAAC8F,GAAD,2BAAqB9F,EAAM8F,IAA3B,IAA0Cb,MAAOsC,IACjD,CAACxB,GAAD,2BAAmB/F,EAAM+F,IAAzB,IAAsCd,MAAOuC,MAGjD,IAAK,cAAgB,IAAD,EACwBb,EAAOzE,QAAjCuF,EADE,EACVtF,OAAuBI,EADb,EACaA,OACzB0E,EAAgB,SAAA9E,GAAM,OAAIA,IAAWsF,GAC3C,OAAO,2BACFzH,GADL,IAEE,CAACuC,GAAD,2BACKvC,EAAMuC,IADX,IAEE0C,MAAOjF,EAAMuC,GAAQ0C,MAAMkC,OAAOF,OAIxC,QACE,OAAOjH,IAqCXsD,UAjCgB,WAAyB,IAAxBtD,EAAuB,uDAAf,GAAI2G,EAAW,uCACxC,OAAQA,EAAO1E,MACb,IAAK,WAAa,IAAD,EACc0E,EAAOzE,QAA5BG,EADO,EACPA,SAAUF,EADH,EACGA,OAClB,OAAO,2BAAKnC,GAAZ,IAAmB,CAACmC,GAAS,CAAElC,KAAMoC,EAAUD,IAAKD,KAEtD,IAAK,mBAAqB,IAAD,EACMwE,EAAOzE,QAA5BG,EADe,EACfA,SAAUF,EADK,EACLA,OAClB,OAAO,2BAAKnC,GAAZ,IAAmB,CAACmC,GAAD,2BAAenC,EAAMmC,IAArB,IAA8BlC,KAAMoC,MAEzD,IAAK,cAAgB,IACXF,EAAWwE,EAAOzE,QAAlBC,OAC0BuF,GAAgB1H,EAAzCmC,GAFS,YAEgCnC,EAFhC,CAETmC,GAFS,WAGlB,OAAOuF,EAGT,IAAK,cAAgB,IACJC,EAAYhB,EAAOzE,QAA1B+C,MACR,OAAO2C,OAAOC,KAAK7H,GAChBmH,QAAO,SAAAhF,GAAM,OAAKwF,EAAQG,SAAS3F,MACnC4F,QACC,SAACC,EAAU7F,GAAX,mBAAC,eAA2B6F,GAA5B,IAAsC,CAAC7F,GAASnC,EAAMmC,OACtD,IAGN,QACE,OAAOnC,MA+BPiI,EAZY,WAChB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QAImBC,GACjBC,EAAQC,YAAYjC,EAAUwB,GAEpCQ,EAAME,UACJC,KAAS,YAzBO,SAAA5I,GAChB,IACE,IAAMkI,EAAkBG,KAAKQ,UAAU7I,GACvCmI,aAAaW,QAAQ,QAASZ,GAC9B,WAsBAa,CAAUN,EAAMO,cACf,MAGLC,QAAQC,IAAIT,EAAMO,YACbP,EAAMO,WAAW5C,MAAMG,MAAM4C,SAChCF,QAAQC,IAAI,QCtKC,SAAcT,GAC3BQ,QAAQC,IAAI,qBACZ,IAAME,EAAcxE,IAAQC,WAE5B4D,EAAMzG,SAAS,CACbC,KAAM,WACNC,QAAS,CAAEK,OAAQ6G,EAAapE,UAAW,gBAG7CyD,EAAMzG,SAAS,CACbC,KAAM,WACNC,QAAS,CACPK,OAAQ6G,EACRjH,OAAQyC,IAAQC,WAChBxC,SAAU,gBAIdoG,EAAMzG,SAAS,CACbC,KAAM,WACNC,QAAS,CACPK,OAAQ6G,EACRjH,OAAQyC,IAAQC,WAChBxC,SAAU,iBAId4G,QAAQC,IAAI,sBACZ,IAAMG,EAAezE,IAAQC,WAE7B4D,EAAMzG,SAAS,CACbC,KAAM,WACNC,QAAS,CAAEK,OAAQ8G,EAAcrE,UAAW,iBAG9CyD,EAAMzG,SAAS,CACbC,KAAM,WACNC,QAAS,CACPK,OAAQ8G,EACRlH,OAAQyC,IAAQC,WAChBxC,SAAU,YAIdoG,EAAMzG,SAAS,CACbC,KAAM,WACNC,QAAS,CACPK,OAAQ8G,EACRlH,OAAQyC,IAAQC,WAChBxC,SAAU,YDsHdiH,CAAKb,IAGQA,QEhKKc,QACW,cAA7B/G,OAAOgH,SAASC,UAEe,UAA7BjH,OAAOgH,SAASC,UAEhBjH,OAAOgH,SAASC,SAASC,MACvB,2D,WCNAC,EAAc5F,SAAS6F,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUrB,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFkB,GDgHI,kBAAmBI,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.7f8ce3ef.chunk.js","sourcesContent":["import \"../styles/EditButtons.css\";\n\nimport React from \"react\";\n\nconst EditButtons = ({ handleSave, saveLabel, handleDelete, handleCancel }) => (\n  <div className=\"Edit-Buttons\">\n    <div\n      tabIndex=\"0\"\n      className=\"Edit-Button\"\n      style={{ backgroundColor: \"#5aac44\" }}\n      onClick={handleSave}\n    >\n      {saveLabel}\n    </div>\n    {handleDelete && (\n      <div\n        tabIndex=\"0\"\n        className=\"Edit-Button\"\n        style={{ backgroundColor: \"#EA2525\", marginLeft: 0 }}\n        onClick={handleDelete}\n      >\n        Delete\n      </div>\n    )}\n    <div tabIndex=\"0\" className=\"Edit-Button-Cancel\" onClick={handleCancel}>\n      <ion-icon name=\"close\" />\n    </div>\n  </div>\n);\n\nexport default EditButtons;\n","import \"../styles/CardEditor.css\";\n\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\n\nclass CardEditor extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  handleChangeText = event => this.setState({ text: event.target.value });\n\n  onEnter = e => {\n    const { text } = this.state;\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const { onSave, onCancel, onDelete, adding } = this.props;\n\n    return (\n      <div className=\"Edit-Card\">\n        <div className=\"Card\">\n          <TextareaAutosize\n            autoFocus\n            className=\"Edit-Card-Textarea\"\n            placeholder=\"Enter the text for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n          />\n        </div>\n        <EditButtons\n          handleSave={() => onSave(text)}\n          saveLabel={adding ? \"Add card\" : \"Save\"}\n          handleDelete={onDelete}\n          handleCancel={onCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CardEditor;\n","import \"../styles/Card.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport CardEditor from \"./CardEditor\";\n\nclass Card extends Component {\n  state = {\n    hover: false,\n    editing: false\n  };\n\n  startHover = () => this.setState({ hover: true });\n  endHover = () => this.setState({ hover: false });\n\n  startEditing = () =>\n    this.setState({\n      hover: false,\n      editing: true,\n      text: this.props.card.text\n    });\n\n  endEditing = () => this.setState({ hover: false, editing: false });\n\n  editCard = async text => {\n    const { card, dispatch } = this.props;\n\n    this.endEditing();\n\n    dispatch({\n      type: \"CHANGE_CARD_TEXT\",\n      payload: { cardId: card._id, cardText: text }\n    });\n  };\n\n  deleteCard = async () => {\n    const { listId, card, dispatch } = this.props;\n\n    if (window.confirm(\"Are you sure to delete this card?\")) {\n      dispatch({\n        type: \"DELETE_CARD\",\n        payload: { cardId: card._id, listId }\n      });\n    }\n  };\n\n  render() {\n    const { card, index } = this.props;\n    const { hover, editing } = this.state;\n\n    if (!editing) {\n      return (\n        <Draggable draggableId={card._id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className=\"Card\"\n              onMouseEnter={this.startHover}\n              onMouseLeave={this.endHover}\n            >\n              {hover && (\n                <div className=\"Card-Icons\">\n                  <div className=\"Card-Icon\" onClick={this.startEditing}>\n                    <ion-icon name=\"create\" />\n                  </div>\n                </div>\n              )}\n\n              {card.text}\n            </div>\n          )}\n        </Draggable>\n      );\n    } else {\n      return (\n        <CardEditor\n          text={card.text}\n          onSave={this.editCard}\n          onDelete={this.deleteCard}\n          onCancel={this.endEditing}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(Card);\n","import \"../styles/ListEditor.css\";\n\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nclass ListEditor extends Component {\n  ref = React.createRef();\n\n  onEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.saveList();\n    }\n  };\n\n  handleClick = e => {\n    const node = this.ref.current;\n\n    if (node.contains(e.target)) {\n      return;\n    }\n\n    this.props.onClickOutside();\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClick, false);\n  }\n\n  render() {\n    const { title, handleChangeTitle, deleteList } = this.props;\n\n    return (\n      <div className=\"List-Title-Edit\" ref={this.ref}>\n        <TextareaAutosize\n          autoFocus\n          className=\"List-Title-Textarea\"\n          placeholder=\"Enter list title...\"\n          value={title}\n          onChange={handleChangeTitle}\n          onKeyDown={this.onEnter}\n          style={{ width: deleteList ? 220 : 245 }}\n        />\n        {deleteList && <ion-icon name=\"trash\" onClick={deleteList} />}\n      </div>\n    );\n  }\n}\n\nexport default ListEditor;\n","import \"../styles/List.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport ListEditor from \"./ListEditor\";\n\nimport shortid from \"shortid\";\n\nclass List extends Component {\n  state = {\n    editingTitle: false,\n    title: this.props.list.title,\n    addingCard: false\n  };\n\n  toggleAddingCard = () =>\n    this.setState({ addingCard: !this.state.addingCard });\n\n  addCard = async cardText => {\n    const { listId, dispatch } = this.props;\n\n    this.toggleAddingCard();\n\n    const cardId = shortid.generate();\n\n    dispatch({\n      type: \"ADD_CARD\",\n      payload: { cardText, cardId, listId }\n    });\n  };\n\n  toggleEditingTitle = () =>\n    this.setState({ editingTitle: !this.state.editingTitle });\n\n  handleChangeTitle = e => this.setState({ title: e.target.value });\n\n  editListTitle = async () => {\n    const { listId, dispatch } = this.props;\n    const { title } = this.state;\n\n    this.toggleEditingTitle();\n\n    dispatch({\n      type: \"CHANGE_LIST_TITLE\",\n      payload: { listId, listTitle: title }\n    });\n  };\n\n  deleteList = async () => {\n    const { listId, list, dispatch } = this.props;\n\n    if (window.confirm(\"Are you sure to delete this list?\")) {\n      dispatch({\n        type: \"DELETE_LIST\",\n        payload: {listId, cards: list.cards}\n      });\n    }\n  };\n\n  render() {\n    const { list, index } = this.props;\n    const { editingTitle, addingCard, title } = this.state;\n\n    return (\n      <Draggable draggableId={list._id} index={index}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className=\"List\"\n          >\n            {editingTitle ? (\n              <ListEditor\n                list={list}\n                title={title}\n                handleChangeTitle={this.handleChangeTitle}\n                saveList={this.editListTitle}\n                onClickOutside={this.editListTitle}\n                deleteList={this.deleteList}\n              />\n            ) : (\n              <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\n                {list.title}\n              </div>\n            )}\n\n            <Droppable droppableId={list._id}>\n              {(provided, _snapshot) => (\n                <div ref={provided.innerRef} className=\"Lists-Cards\">\n                  {list.cards &&\n                    list.cards.map((cardId, index) => (\n                      <Card\n                        key={cardId}\n                        cardId={cardId}\n                        index={index}\n                        listId={list._id}\n                      />\n                    ))}\n\n                  {provided.placeholder}\n\n                  {addingCard ? (\n                    <CardEditor\n                      onSave={this.addCard}\n                      onCancel={this.toggleAddingCard}\n                      adding\n                    />\n                  ) : (\n                    <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\n                      <ion-icon name=\"add\" /> Add a card\n                    </div>\n                  )}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);\n","import \"../styles/AddList.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListEditor from \"./ListEditor\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\n\nclass AddList extends Component {\n  state = {\n    title: \"\"\n  };\n\n  handleChangeTitle = e => this.setState({ title: e.target.value });\n\n  createList = async () => {\n    const { title } = this.state;\n    const { dispatch } = this.props;\n\n    this.props.toggleAddingList();\n\n    dispatch({\n      type: \"ADD_LIST\",\n      payload: { listId: shortid.generate(), listTitle: title }\n    });\n  };\n\n  render() {\n    const { toggleAddingList } = this.props;\n    const { title } = this.state;\n\n    return (\n      <div className=\"Add-List-Editor\">\n        <ListEditor\n          title={title}\n          handleChangeTitle={this.handleChangeTitle}\n          onClickOutside={toggleAddingList}\n          saveList={this.createList}\n        />\n\n        <EditButtons\n          handleSave={this.createList}\n          saveLabel={\"Add list\"}\n          handleCancel={toggleAddingList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect()(AddList);\n","import \"../styles/Board.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport List from \"./List\";\nimport AddList from \"./AddList\";\n\nclass Board extends Component {\n  state = {\n    addingList: false\n  };\n\n  toggleAddingList = () =>\n    this.setState({ addingList: !this.state.addingList });\n\n  handleDragEnd = ({ source, destination, type }) => {\n    // dropped outside the allowed zones\n    if (!destination) return;\n\n    const { dispatch } = this.props;\n\n    // Move list\n    if (type === \"COLUMN\") {\n      // Prevent update if nothing has changed\n      if (source.index !== destination.index) {\n        dispatch({\n          type: \"MOVE_LIST\",\n          payload: {\n            oldListIndex: source.index,\n            newListIndex: destination.index\n          }\n        });\n      }\n      return;\n    }\n\n    // Move card\n    if (\n      source.index !== destination.index ||\n      source.droppableId !== destination.droppableId\n    ) {\n      dispatch({\n        type: \"MOVE_CARD\",\n        payload: {\n          sourceListId: source.droppableId,\n          destListId: destination.droppableId,\n          oldCardIndex: source.index,\n          newCardIndex: destination.index\n        }\n      });\n    }\n  };\n\n  render() {\n    const { board } = this.props;\n    const { addingList } = this.state;\n\n    return (\n      <DragDropContext onDragEnd={this.handleDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\n          {(provided, _snapshot) => (\n            <div className=\"Board\" ref={provided.innerRef}>\n              {board.lists.map((listId, index) => {\n                return <List listId={listId} key={listId} index={index} />;\n              })}\n\n              {provided.placeholder}\n\n              <div className=\"Add-List\">\n                {addingList ? (\n                  <AddList toggleAddingList={this.toggleAddingList} />\n                ) : (\n                  <div\n                    onClick={this.toggleAddingList}\n                    className=\"Add-List-Button\"\n                  >\n                    <ion-icon name=\"add\" /> Add a list\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ board: state.board });\n\nexport default connect(mapStateToProps)(Board);\n","import \"../styles/App.css\";\n\nimport React, { Component } from \"react\";\nimport Board from \"./Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">React Trello Clone</div>\n\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, createStore } from \"redux\";\nimport throttle from \"lodash.throttle\";\nimport seed from \"./seed\";\n\nconst board = (state = { lists: [] }, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\": {\n      const { listId } = action.payload;\n      return { lists: [...state.lists, listId] };\n    }\n    case \"MOVE_LIST\": {\n      const { oldListIndex, newListIndex } = action.payload;\n      const newLists = Array.from(state.lists);\n      const [removedList] = newLists.splice(oldListIndex, 1);\n      newLists.splice(newListIndex, 0, removedList);\n      return { lists: newLists };\n    }\n    case \"DELETE_LIST\": {\n      const { listId } = action.payload;\n      const filterDeleted = tmpListId => tmpListId !== listId;\n      const newLists = state.lists.filter(filterDeleted);\n      return { lists: newLists };\n    }\n    default:\n      return state;\n  }\n};\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\": {\n      const { listId, listTitle } = action.payload;\n      return {\n        ...state,\n        [listId]: { _id: listId, title: listTitle, cards: [] }\n      };\n    }\n    case \"CHANGE_LIST_TITLE\": {\n      const { listId, listTitle } = action.payload;\n      return {\n        ...state,\n        [listId]: { ...state[listId], title: listTitle }\n      };\n    }\n    case \"DELETE_LIST\": {\n      const { listId } = action.payload;\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    case \"ADD_CARD\": {\n      const { listId, cardId } = action.payload;\n      return {\n        ...state,\n        [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\n      };\n    }\n    case \"MOVE_CARD\": {\n      const {\n        oldCardIndex,\n        newCardIndex,\n        sourceListId,\n        destListId\n      } = action.payload;\n      // Move within the same list\n      if (sourceListId === destListId) {\n        const newCards = Array.from(state[sourceListId].cards);\n        const [removedCard] = newCards.splice(oldCardIndex, 1);\n        newCards.splice(newCardIndex, 0, removedCard);\n        return {\n          ...state,\n          [sourceListId]: { ...state[sourceListId], cards: newCards }\n        };\n      }\n      // Move card from one list to another\n      const sourceCards = Array.from(state[sourceListId].cards);\n      const [removedCard] = sourceCards.splice(oldCardIndex, 1);\n      const destinationCards = Array.from(state[destListId].cards);\n      destinationCards.splice(newCardIndex, 0, removedCard);\n      return {\n        ...state,\n        [sourceListId]: { ...state[sourceListId], cards: sourceCards },\n        [destListId]: { ...state[destListId], cards: destinationCards }\n      };\n    }\n    case \"DELETE_CARD\": {\n      const { cardId: deletedCardId, listId } = action.payload;\n      const filterDeleted = cardId => cardId !== deletedCardId;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          cards: state[listId].cards.filter(filterDeleted)\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_CARD\": {\n      const { cardText, cardId } = action.payload;\n      return { ...state, [cardId]: { text: cardText, _id: cardId } };\n    }\n    case \"CHANGE_CARD_TEXT\": {\n      const { cardText, cardId } = action.payload;\n      return { ...state, [cardId]: { ...state[cardId], text: cardText } };\n    }\n    case \"DELETE_CARD\": {\n      const { cardId } = action.payload;\n      const { [cardId]: deletedCard, ...restOfCards } = state;\n      return restOfCards;\n    }\n    // Find every card from the deleted list and remove it\n    case \"DELETE_LIST\": {\n      const { cards: cardIds } = action.payload;\n      return Object.keys(state)\n        .filter(cardId => !cardIds.includes(cardId))\n        .reduce(\n          (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\n          {}\n        );\n    }\n    default:\n      return state;\n  }\n};\n\nconst reducers = combineReducers({\n  board,\n  listsById,\n  cardsById\n});\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst persistedState = loadState();\nconst store = createStore(reducers, persistedState);\n\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 1000)\n);\n\nconsole.log(store.getState());\nif (!store.getState().board.lists.length) {\n  console.log(\"SEED\");\n  seed(store);\n}\n\nexport default store;\n","import shortid from \"shortid\";\n\nexport default function seed(store) {\n  console.log(\"Insert first list\");\n  const firstListId = shortid.generate();\n\n  store.dispatch({\n    type: \"ADD_LIST\",\n    payload: { listId: firstListId, listTitle: \"First list\" }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: firstListId,\n      cardId: shortid.generate(),\n      cardText: \"First card\"\n    }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: firstListId,\n      cardId: shortid.generate(),\n      cardText: \"Second card\"\n    }\n  });\n\n  console.log(\"Insert second list\");\n  const secondListId = shortid.generate();\n\n  store.dispatch({\n    type: \"ADD_LIST\",\n    payload: { listId: secondListId, listTitle: \"Second list\" }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: secondListId,\n      cardId: shortid.generate(),\n      cardText: \"Card 1\"\n    }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: secondListId,\n      cardId: shortid.generate(),\n      cardText: \"Card 2\"\n    }\n  });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}