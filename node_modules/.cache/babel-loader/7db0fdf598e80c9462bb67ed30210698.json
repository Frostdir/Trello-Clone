{"ast":null,"code":"import shortid from\"shortid\";export default function seed(store){console.log(\"Insert first list\");var firstListId=shortid.generate();store.dispatch({type:\"ADD_LIST\",payload:{listId:firstListId,listTitle:\"First list\"}});store.dispatch({type:\"ADD_CARD\",payload:{listId:firstListId,cardId:shortid.generate(),cardText:\"First card\"}});store.dispatch({type:\"ADD_CARD\",payload:{listId:firstListId,cardId:shortid.generate(),cardText:\"Second card\"}});console.log(\"Insert second list\");var secondListId=shortid.generate();store.dispatch({type:\"ADD_LIST\",payload:{listId:secondListId,listTitle:\"Second list\"}});store.dispatch({type:\"ADD_CARD\",payload:{listId:secondListId,cardId:shortid.generate(),cardText:\"Card 1\"}});store.dispatch({type:\"ADD_CARD\",payload:{listId:secondListId,cardId:shortid.generate(),cardText:\"Card 2\"}});};","map":{"version":3,"sources":["C:/Users/1/Desktop/trello-clone/src/seed.js"],"names":["shortid","seed","store","console","log","firstListId","generate","dispatch","type","payload","listId","listTitle","cardId","cardText","secondListId"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,SAApB,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAClCC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACA,GAAMC,CAAAA,WAAW,CAAGL,OAAO,CAACM,QAAR,EAApB,CAEAJ,KAAK,CAACK,QAAN,CAAe,CACbC,IAAI,CAAE,UADO,CAEbC,OAAO,CAAE,CAAEC,MAAM,CAAEL,WAAV,CAAuBM,SAAS,CAAE,YAAlC,CAFI,CAAf,EAKAT,KAAK,CAACK,QAAN,CAAe,CACbC,IAAI,CAAE,UADO,CAEbC,OAAO,CAAE,CACPC,MAAM,CAAEL,WADD,CAEPO,MAAM,CAAEZ,OAAO,CAACM,QAAR,EAFD,CAGPO,QAAQ,CAAE,YAHH,CAFI,CAAf,EASAX,KAAK,CAACK,QAAN,CAAe,CACbC,IAAI,CAAE,UADO,CAEbC,OAAO,CAAE,CACPC,MAAM,CAAEL,WADD,CAEPO,MAAM,CAAEZ,OAAO,CAACM,QAAR,EAFD,CAGPO,QAAQ,CAAE,aAHH,CAFI,CAAf,EASAV,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,GAAMU,CAAAA,YAAY,CAAGd,OAAO,CAACM,QAAR,EAArB,CAEAJ,KAAK,CAACK,QAAN,CAAe,CACbC,IAAI,CAAE,UADO,CAEbC,OAAO,CAAE,CAAEC,MAAM,CAAEI,YAAV,CAAwBH,SAAS,CAAE,aAAnC,CAFI,CAAf,EAKAT,KAAK,CAACK,QAAN,CAAe,CACbC,IAAI,CAAE,UADO,CAEbC,OAAO,CAAE,CACPC,MAAM,CAAEI,YADD,CAEPF,MAAM,CAAEZ,OAAO,CAACM,QAAR,EAFD,CAGPO,QAAQ,CAAE,QAHH,CAFI,CAAf,EASAX,KAAK,CAACK,QAAN,CAAe,CACbC,IAAI,CAAE,UADO,CAEbC,OAAO,CAAE,CACPC,MAAM,CAAEI,YADD,CAEPF,MAAM,CAAEZ,OAAO,CAACM,QAAR,EAFD,CAGPO,QAAQ,CAAE,QAHH,CAFI,CAAf,EAQD","sourcesContent":["import shortid from \"shortid\";\n\nexport default function seed(store) {\n  console.log(\"Insert first list\");\n  const firstListId = shortid.generate();\n\n  store.dispatch({\n    type: \"ADD_LIST\",\n    payload: { listId: firstListId, listTitle: \"First list\" }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: firstListId,\n      cardId: shortid.generate(),\n      cardText: \"First card\"\n    }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: firstListId,\n      cardId: shortid.generate(),\n      cardText: \"Second card\"\n    }\n  });\n\n  console.log(\"Insert second list\");\n  const secondListId = shortid.generate();\n\n  store.dispatch({\n    type: \"ADD_LIST\",\n    payload: { listId: secondListId, listTitle: \"Second list\" }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: secondListId,\n      cardId: shortid.generate(),\n      cardText: \"Card 1\"\n    }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: secondListId,\n      cardId: shortid.generate(),\n      cardText: \"Card 2\"\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}